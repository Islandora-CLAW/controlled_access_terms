<?php

/**
 * @file
 * Controlled Access Terms stuff.
 */

use Drupal\jsonld\Normalizer\NormalizerBase;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_rdf_namespaces().
 */
function controlled_access_terms_rdf_namespaces() {
  return [
    'wgs84_pos' => 'http://www.w3.org/2003/01/geo/wgs84_pos#',
  ];
}

/**
 * Implements hook_jsonld_alter_normalized_array().
 */
function controlled_access_terms_jsonld_alter_normalized_array(EntityInterface $entity, array &$normalized, array $context) {
  if (isset($normalized['@graph']) && is_array($normalized['@graph'])) {
    foreach ($entity->getFieldDefinitions() as $field => $field_definition) {
      if (($field_definition->getType() == 'typed_relation') && (!empty($entity->get($field)->getValue()))) {
        foreach ($entity->get($field)->getValue() as $value) {
          $predicate = NormalizerBase::escapePrefix($value['rel_type'], $context['namespaces']);
          $referenced_entity = \Drupal::entityTypeManager()->getStorage($field_definition->getSetting('target_type'))->load($value['target_id']);
          // We are assuming the first graph is the one corresponding
          // to the node/taxonomy_term we are modifying.
          $normalized['@graph'][0][$predicate][] = [
            '@id' => $referenced_entity->toUrl('canonical', ['absolute' => TRUE])->setRouteParameter('_format', 'jsonld')->toString(),
          ];
        }
      }
    }
  }
}
